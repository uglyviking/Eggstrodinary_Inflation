{
    "type": [
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        0,
        1,
        0,
        1,
        3,
        2,
        3,
        3,
        2,
        3,
        2,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        2
    ],
    "data": [
        "\nR version 4.2.3 (2023-03-15 ucrt) -- \"Shortstop Beagle\"\nCopyright (C) 2023 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()",
        "' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n[Workspace loaded from C:/Users/jacob/Documents/Eggstrodinary_Inflation/.RData]\r\n\r\n",
        "> ",
        "shapiro.test(inflation_long$Overall_Inflation)",
        "\n\tShapiro-Wilk normality test\n\ndata:  inflation_long$Overall_Inflation\nW = 0.96006, p-value = 3.193e-07\n\n",
        "> ",
        "View(inflation_long)",
        "> ",
        "View(inflation_long)",
        "> ",
        "# Your existing code with modifications",
        "> ",
        "library(tidyr)",
        "> ",
        "library(dplyr)",
        "\nAttaching package: ‘dplyr’\n\nThe following objects are masked from ‘package:stats’:\n\n    filter, lag\n\nThe following objects are masked from ‘package:base’:\n\n    intersect, setdiff, setequal, union\n\n",
        "> ",
        "library(lubridate)",
        "\nAttaching package: ‘lubridate’\n\nThe following objects are masked from ‘package:base’:\n\n    date, intersect, setdiff, union\n\n",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(plotly)",
        "\nAttaching package: ‘plotly’\n\nThe following object is masked from ‘package:ggplot2’:\n\n    last_plot\n\nThe following object is masked from ‘package:stats’:\n\n    filter\n\nThe following object is masked from ‘package:graphics’:\n\n    layout\n\n",
        "> ",
        "#import data",
        "> ",
        "inflation_data <- read.csv(\"City_Inflation_Differences.csv\")",
        "Error in file(file, \"rt\") : cannot open the connection\nIn addition: Warning message:\nIn file(file, \"rt\") :\n  cannot open file 'City_Inflation_Differences.csv': No such file or directory\n",
        "> ",
        "#import data",
        "> ",
        "inflation_data <- read.csv(\"Data/City_Inflation_Differences.csv\")",
        "> ",
        "View(inflation_data)",
        "> ",
        "View(inflation_data)",
        "> ",
        "# Determine the most recent year and filter if necessary",
        "> ",
        "max_year <- max(inflation_data$Year)",
        "> ",
        "inflation_data_filtered <- inflation_data |>",
        "+ ",
        "  filter(Year > (max_year - 14))",
        "> ",
        "# Reshape the filtered data",
        "> ",
        "inflation_long <- inflation_data_filtered |>",
        "+ ",
        "  pivot_longer(",
        "+ ",
        "    cols = c(ends_with(\"Percentage_Change\"), ends_with(\"Egg_Inflation_Dif\")),",
        "+ ",
        "    names_to = c(\"Month\", \".value\"),",
        "+ ",
        "    names_pattern = \"(.+)_(Percentage_Change|Egg_Inflation_Dif)\"",
        "+ ",
        "  ) |>",
        "+ ",
        "  rename(",
        "+ ",
        "    Overall_Inflation = Percentage_Change,",
        "+ ",
        "    Egg_Inflation_Dif = Egg_Inflation_Dif",
        "+ ",
        "  ) |>",
        "+ ",
        "  mutate(",
        "+ ",
        "    Month = match(Month, month.abb),",
        "+ ",
        "    Date = ymd(paste(Year, Month, \"01\"))",
        "+ ",
        "  ) |>",
        "+ ",
        "  arrange(Date)",
        "> ",
        "View(inflation_long)",
        "> ",
        "View(inflation_long)",
        "> ",
        "#import data",
        "> ",
        "inflation_data <- read.csv(\"Data/City_Inflation_Differences.csv\")",
        "> ",
        "# Determine the most recent year and filter if necessary",
        "> ",
        "max_year <- max(inflation_data$Year)",
        "> ",
        "inflation_data_filtered <- inflation_data |>",
        "+ ",
        "  filter(Year > (max_year - 14))",
        "> ",
        "# Reshape the filtered data",
        "> ",
        "inflation_long <- inflation_data_filtered |>",
        "+ ",
        "  pivot_longer(",
        "+ ",
        "    cols = c(ends_with(\"Percentage_Change\"), ends_with(\"Egg_Inflation_Dif\")),",
        "+ ",
        "    names_to = c(\"Month\", \".value\"),",
        "+ ",
        "    names_pattern = \"(.+)_(Percentage_Change|Egg_Inflation_Dif)\"",
        "+ ",
        "  ) |>",
        "+ ",
        "  rename(",
        "+ ",
        "    Overall_Inflation = Percentage_Change,",
        "+ ",
        "    Egg_Inflation_Dif = Egg_Inflation_Dif",
        "+ ",
        "  ) |>",
        "+ ",
        "  mutate(",
        "+ ",
        "    Month = match(Month, month.abb),",
        "+ ",
        "    Date = ymd(paste(Year, Month, \"01\"))",
        "+ ",
        "  ) |>",
        "+ ",
        "  arrange(Date)",
        "> ",
        "# Create separate time series for overall inflation and egg inflation difference",
        "> ",
        "overall_inflation_ts <- ts(inflation_long$Overall_Inflation, ",
        "+ ",
        "                           start = c(min(inflation_long$Year), 1), ",
        "+ ",
        "                           end = c(max(inflation_long$Year), 12), ",
        "+ ",
        "                           frequency = 12)",
        "> ",
        "egg_inflation_diff_ts <- ts(inflation_long$Egg_Inflation_Dif, ",
        "+ ",
        "                            start = c(min(inflation_long$Year), 1), ",
        "+ ",
        "                            end = c(max(inflation_long$Year), 12), ",
        "+ ",
        "                            frequency = 12)",
        "> ",
        "# Plot both time series using ggplot2",
        "> ",
        "time_series_plot <- ggplot(inflation_long, aes(x = Date)) +",
        "+ ",
        "  geom_line(aes(y = Overall_Inflation, color = \"Overall Inflation\")) +",
        "+ ",
        "  geom_line(aes(y = Egg_Inflation_Dif, color = \"Egg Inflation Difference\")) +",
        "+ ",
        "  labs(title = \"Comparison of Overall Inflation and Egg Inflation Difference (Last 14 Years)\", ",
        "+ ",
        "       y = \"Percentage Change\", ",
        "+ ",
        "       color = \"Measure\") +",
        "+ ",
        "  scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\") +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "View(inflation_long)",
        "> ",
        "View(inflation_long)",
        "> ",
        "shapiro.test(inflation_long$egg_inflation_diff_ts)",
        "Error in shapiro.test(inflation_long$egg_inflation_diff_ts) : \n  is.numeric(x) is not TRUE\nIn addition: Warning message:\nUnknown or uninitialised column: `egg_inflation_diff_ts`. \n",
        "> ",
        "shapiro.test(inflation_long$Egg_Inflation_Dif)",
        "\n\tShapiro-Wilk normality test\n\ndata:  inflation_long$Egg_Inflation_Dif\nW = 0.92671, p-value = 2.466e-07\n\n",
        "> ",
        "cor.test(egg_inflation_diff_ts, overall_inflation_ts, method = \"spearman\")",
        "\n\tSpearman's rank correlation rho\n\ndata:  egg_inflation_diff_ts and overall_inflation_ts\nS = 41204, p-value < 2.2e-16\nalternative hypothesis: true rho is not equal to 0\nsample estimates:\n      rho \n0.9418482 \n\n",
        "Warning message:\nIn cor.test.default(egg_inflation_diff_ts, overall_inflation_ts,  :\n  Cannot compute exact p-value with ties\n",
        "> ",
        "inflation_data <- read.csv(\"Data/City_Inflation_Differences.csv\")",
        "> ",
        "View(inflation_data)",
        "> ",
        "View(inflation_data)",
        "> ",
        "# Your existing code with modifications",
        "> ",
        "library(tidyr)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(lubridate)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(plotly)",
        "> ",
        "#import data",
        "> ",
        "inflation_data <- read.csv(\"Data/City_Inflation_Differences.csv\")",
        "> ",
        "# Determine the most recent year and filter if necessary",
        "> ",
        "max_year <- max(inflation_data$Year)",
        "> ",
        "inflation_data_filtered <- inflation_data |>",
        "+ ",
        "  filter(Year > (max_year - 25))",
        "> ",
        "# Reshape the filtered data",
        "> ",
        "inflation_long <- inflation_data_filtered |>",
        "+ ",
        "  pivot_longer(",
        "+ ",
        "    cols = c(ends_with(\"Percentage_Change\"), ends_with(\"Egg_Inflation_Dif\")),",
        "+ ",
        "    names_to = c(\"Month\", \".value\"),",
        "+ ",
        "    names_pattern = \"(.+)_(Percentage_Change|Egg_Inflation_Dif)\"",
        "+ ",
        "  ) |>",
        "+ ",
        "  rename(",
        "+ ",
        "    Overall_Inflation = Percentage_Change,",
        "+ ",
        "    Egg_Inflation_Dif = Egg_Inflation_Dif",
        "+ ",
        "  ) |>",
        "+ ",
        "  mutate(",
        "+ ",
        "    Month = match(Month, month.abb),",
        "+ ",
        "    Date = ymd(paste(Year, Month, \"01\"))",
        "+ ",
        "  ) |>",
        "+ ",
        "  arrange(Date)",
        "> ",
        "# Create separate time series for overall inflation and egg inflation difference",
        "> ",
        "overall_inflation_ts <- ts(inflation_long$Overall_Inflation, ",
        "+ ",
        "                           start = c(min(inflation_long$Year), 1), ",
        "+ ",
        "                           end = c(max(inflation_long$Year), 12), ",
        "+ ",
        "                           frequency = 12)",
        "> ",
        "egg_inflation_diff_ts <- ts(inflation_long$Egg_Inflation_Dif, ",
        "+ ",
        "                            start = c(min(inflation_long$Year), 1), ",
        "+ ",
        "                            end = c(max(inflation_long$Year), 12), ",
        "+ ",
        "                            frequency = 12)",
        "> ",
        "# Plot both time series using ggplot2",
        "> ",
        "time_series_plot <- ggplot(inflation_long, aes(x = Date)) +",
        "+ ",
        "  geom_line(aes(y = Overall_Inflation, color = \"Overall Inflation\")) +",
        "+ ",
        "  geom_line(aes(y = Egg_Inflation_Dif, color = \"Egg Inflation Difference\")) +",
        "+ ",
        "  labs(title = \"Comparison of Overall Inflation and Egg Inflation Difference (Last 14 Years)\", ",
        "+ ",
        "       y = \"Percentage Change\", ",
        "+ ",
        "       color = \"Measure\") +",
        "+ ",
        "  scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\") +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "time_series_plot",
        "Warning messages:\n1: \u001B[38;5;254mRemoved 6 rows containing missing values (`geom_line()`).\u001B[39m \n2: \u001B[38;5;254mRemoved 6 rows containing missing values (`geom_line()`).\u001B[39m \n",
        "> ",
        "ggplot(inflation_long, aes(x = Date, y = Overall_Inflation)) +",
        "+ ",
        "  geom_point() +  # Add points",
        "+ ",
        "  geom_smooth(method = \"lm\", se = FALSE, color = \"red\") +  # Add linear regression line",
        "+ ",
        "  theme_minimal()",
        "\u001B[38;5;254m`geom_smooth()` using formula = 'y ~ x'\u001B[39m\n",
        "Warning messages:\n1: \u001B[38;5;254mRemoved 6 rows containing non-finite values (`stat_smooth()`).\u001B[39m \n2: \u001B[38;5;254mRemoved 6 rows containing missing values (`geom_point()`).\u001B[39m \n",
        "> ",
        "ggplot(inflation_long, aes(x = Date, y = Egg_Inflation_Dif)) +",
        "+ ",
        "  geom_point() +  # Add points",
        "+ ",
        "  geom_smooth(method = \"lm\", se = FALSE, color = \"red\") +  # Add linear regression line",
        "+ ",
        "  theme_minimal()",
        "\u001B[38;5;254m`geom_smooth()` using formula = 'y ~ x'\u001B[39m\n",
        "Warning messages:\n1: \u001B[38;5;254mRemoved 6 rows containing non-finite values (`stat_smooth()`).\u001B[39m \n2: \u001B[38;5;254mRemoved 6 rows containing missing values (`geom_point()`).\u001B[39m \n",
        "> ",
        "# Install and load required packages if not already done",
        "> ",
        "if (!requireNamespace(\"ggimage\", quietly = TRUE)) install.packages(\"ggimage\")",
        "WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:\n\nhttps://cran.rstudio.com/bin/windows/Rtools/\nInstalling package into ‘C:/Users/jacob/AppData/Local/R/win-library/4.2’\n(as ‘lib’ is unspecified)\nalso installing the dependencies ‘gridGraphics’, ‘yulab.utils’, ‘ggfun’, ‘ggplotify’, ‘magick’\n\n",
        "\n  There are binary versions available but the source versions are later:\n            binary source needs_compilation\nyulab.utils  0.1.4  0.1.5             FALSE\nggfun        0.1.4  0.1.5             FALSE\nmagick       2.8.3  2.8.4              TRUE\n\n  Binaries will be installed\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.2/gridGraphics_0.5-1.zip'\nContent type 'application/zip' length 270703 bytes (264 KB)\ndownloaded 264 KB\n\ntrying URL 'https://cran.rstudio.com/bin/windows/contrib/4.2/ggplotify_0.1.2.zip'\nContent type 'application/zip' length 141398 bytes (138 KB)\ndownloaded 138 KB\n\ntrying URL 'https://cran.rstudio.com/bin/windows/contrib/4.2/magick_2.8.3.zip'\nContent type 'application/zip' length 19544441 bytes (18.6 MB)\ndownloaded 18.6 MB\n\ntrying URL 'https://cran.",
        "rstudio.com/bin/windows/contrib/4.2/ggimage_0.3.3.zip'\nContent type 'application/zip' length 154468 bytes (150 KB)\ndownloaded 150 KB\n\n",
        "package ‘gridGraphics’ successfully unpacked and MD5 sums checked\npackage ‘ggplotify’ successfully unpacked and MD5 sums checked\npackage ‘magick’ successfully unpacked and MD5 sums checked\npackage ‘ggimage’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\jacob\\AppData\\Local\\Temp\\RtmpKM1JKk\\downloaded_packages\n",
        "installing the source packages ‘yulab.utils’, ‘ggfun’\n\ntrying URL 'https://cran.rstudio.com/src/contrib/yulab.utils_0.1.5.tar.gz'\nContent type 'application/x-gzip' length 18939 bytes (18 KB)\ndownloaded 18 KB\n\ntrying URL 'https://cran.rstudio.com/src/contrib/ggfun_0.1.5.tar.gz'\nContent type 'application/x-gzip' length 103081 bytes (100 KB)\ndownloaded 100 KB\n\n",
        "* installing *source* package 'yulab.utils' ...\n** package 'yulab.utils' successfully unpacked and MD5 sums checked\n** using staged installation\n** R\n** byte-compile and prepare package for lazy loading\n** help\n*** installing help indices\n** building package indices\n** testing if installed package can be loaded from temporary location\n** testing if installed package can be loaded from final location\n** testing if installed package keeps a record of temporary installation path\n* DONE (yulab.utils)\n* installi",
        "ng *source* package 'ggfun' ...\n** package 'ggfun' successfully unpacked and MD5 sums checked\n** using staged installation\n** R\n** inst\n** byte-compile and prepare package for lazy loading\n** help\n*** installing help indices\n** building package indices\n** installing vignettes\n** testing if installed package can be loaded from temporary location\n** testing if installed package can be loaded from final location\n** testing if installed package keeps a record of temporary installation path\n* DONE (ggfun)\n",
        "\nThe downloaded source packages are in\n\t‘C:\\Users\\jacob\\AppData\\Local\\Temp\\RtmpKM1JKk\\downloaded_packages’\n",
        "> ",
        "if (!requireNamespace(\"fontawesome\", quietly = TRUE)) install.packages(\"fontawesome\")",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(ggimage)",
        "> ",
        "library(fontawesome)",
        "> ",
        "# Get the egg icon as an image file",
        "> ",
        "egg_icon <- fontawesome::fa_png(\"egg\")",
        "Error: Use of the `fa_png()` function requires the rsvg package:\n * It can be installed with `install.packages(\"rsvg\")`.\n",
        "> ",
        "install.packages(\"rsvg\")",
        "WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:\n\nhttps://cran.rstudio.com/bin/windows/Rtools/\nInstalling package into ‘C:/Users/jacob/AppData/Local/R/win-library/4.2’\n(as ‘lib’ is unspecified)\ntrying URL 'https://cran.rstudio.com/bin/windows/contrib/4.2/rsvg_2.6.0.zip'\nContent type 'application/zip' length 8431969 bytes (8.0 MB)\ndownloaded 8.0 MB\n\n",
        "package ‘rsvg’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\jacob\\AppData\\Local\\Temp\\RtmpKM1JKk\\downloaded_packages\n",
        "> ",
        "library(rsvg)",
        "Linking to librsvg 2.57.0\n",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(ggimage)",
        "> ",
        "library(fontawesome)",
        "> ",
        "# Get the egg icon as an image file",
        "> ",
        "egg_icon <- fontawesome::fa_png(\"egg\")",
        "> ",
        "# Update your ggplot code",
        "> ",
        "ggplot(inflation_long, aes(x = Date, y = Egg_Inflation_Dif)) +",
        "+ ",
        "  geom_image(aes(image = egg_icon), size = 0.05) +  # Use geom_image instead of geom_point",
        "+ ",
        "  geom_smooth(method = \"lm\", se = FALSE, color = \"red\") +  # Add linear regression line",
        "+ ",
        "  theme_minimal() +",
        "+ ",
        "  labs(title = \"Egg Inflation Difference Over Time\",",
        "+ ",
        "       x = \"Date\",",
        "+ ",
        "       y = \"Egg Inflation Difference\") +",
        "+ ",
        "  theme(plot.title = element_text(hjust = 0.5))  # C",
        "\u001B[38;5;254m`geom_smooth()` using formula = 'y ~ x'\u001B[39m\n",
        "Warning messages:\n1: \u001B[38;5;254mRemoved 6 rows containing non-finite values (`stat_smooth()`).\u001B[39m \n2: \u001B[38;5;254mRemoved 6 rows containing missing values (`geom_image()`).\u001B[39m \n",
        "> ",
        "# Update your ggplot code",
        "> ",
        "ggplot(inflation_long, aes(x = Date, y = Egg_Inflation_Dif)) +",
        "+ ",
        "  geom_image(aes(image = egg_icon), size = 0.05) +  # Use geom_image instead of geom_point",
        "+ ",
        "  geom_smooth(method = \"lm\", se = FALSE, color = \"red\") +  # Add linear regression line",
        "+ ",
        "  theme_minimal() +",
        "+ ",
        "  labs(title = \"Egg Inflation Difference Over Time\",",
        "+ ",
        "       x = \"Date\",",
        "+ ",
        "       y = \"Egg Inflation Difference\") +",
        "+ ",
        "  theme(plot.title = element_text(hjust = 0.5))  # C",
        "\u001B[38;5;254m`geom_smooth()` using formula = 'y ~ x'\u001B[39m\n",
        "Warning messages:\n1: \u001B[38;5;254mRemoved 6 rows containing non-finite values (`stat_smooth()`).\u001B[39m \n2: \u001B[38;5;254mRemoved 6 rows containing missing values (`geom_image()`).\u001B[39m \n",
        "> ",
        "library(fontawesome)",
        "> ",
        "# Get the egg icon as an image file",
        "> ",
        "egg_icon <- fontawesome::fa_png(\"egg\")",
        "> ",
        "# Update your ggplot code",
        "> ",
        "ggplot(inflation_long, aes(x = Date, y = Egg_Inflation_Dif)) +",
        "+ ",
        "  geom_image(aes(image = egg_icon), size = 0.05, na.rm = TRUE) +  # Use geom_image instead of geom_point",
        "+ ",
        "  geom_smooth(method = \"lm\", se = FALSE, color = \"red\", na.rm = TRUE) +  # Add linear regression line",
        "+ ",
        "  theme_minimal() +",
        "+ ",
        "  labs(title = \"Egg Inflation Difference Over Time\",",
        "+ ",
        "       x = \"Date\",",
        "+ ",
        "       y = \"Egg Inflation Difference\") +",
        "+ ",
        "  theme(plot.title = element_text(hjust = 0.5)) +  # Center the title",
        "+ ",
        "  scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\") +  # Improve x-axis labels",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "\u001B[38;5;254m`geom_smooth()` using formula = 'y ~ x'\u001B[39m\n",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(ggimage)",
        "> ",
        "# Create a custom egg shape",
        "> ",
        "create_egg <- function() {",
        "+ ",
        "  png(\"egg.png\", width = 100, height = 100, bg = \"transparent\")",
        "+ ",
        "  par(mar = c(0,0,0,0))",
        "+ ",
        "  plot.new()",
        "+ ",
        "  plot.window(xlim = c(0, 1), ylim = c(0, 1), asp = 1)",
        "+ ",
        "  ",
        "+ ",
        "  # Draw egg shape",
        "+ ",
        "  theta <- seq(0, 2*pi, length.out = 100)",
        "+ ",
        "  x <- 0.5 + 0.3 * cos(theta)",
        "+ ",
        "  y <- 0.5 + 0.4 * sin(theta) * (1 - 0.3 * sin(theta))",
        "+ ",
        "  polygon(x, y, col = \"yellow\", border = \"orange\")",
        "+ ",
        "  ",
        "+ ",
        "  dev.off()",
        "+ ",
        "  return(\"egg.png\")",
        "+ ",
        "}",
        "> ",
        "# Create the egg image",
        "> ",
        "egg_path <- create_egg()",
        "> ",
        "# Update your ggplot code",
        "> ",
        "ggplot(inflation_long, aes(x = Date, y = Egg_Inflation_Dif)) +",
        "+ ",
        "  geom_image(aes(image = egg_path), size = 0.05, na.rm = TRUE) +",
        "+ ",
        "  geom_smooth(method = \"lm\", se = FALSE, color = \"red\", na.rm = TRUE) +",
        "+ ",
        "  theme_minimal() +",
        "+ ",
        "  labs(title = \"Egg Inflation Difference Over Time\",",
        "+ ",
        "       x = \"Date\",",
        "+ ",
        "       y = \"Egg Inflation Difference\") +",
        "+ ",
        "  theme(plot.title = element_text(hjust = 0.5)) +",
        "+ ",
        "  scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\") +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "\u001B[38;5;254m`geom_smooth()` using formula = 'y ~ x'\u001B[39m\n",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(ggimage)",
        "> ",
        "# Create a custom egg shape",
        "> ",
        "create_egg <- function() {",
        "+ ",
        "  png(\"egg.png\", width = 100, height = 100, bg = \"transparent\")",
        "+ ",
        "  par(mar = c(0,0,0,0))",
        "+ ",
        "  plot.new()",
        "+ ",
        "  plot.window(xlim = c(0, 1), ylim = c(0, 1), asp = 1)",
        "+ ",
        "  ",
        "+ ",
        "  # Draw egg shape (flipped)",
        "+ ",
        "  theta <- seq(0, 2*pi, length.out = 100)",
        "+ ",
        "  x <- 0.5 + 0.3 * cos(theta)",
        "+ ",
        "  y <- 0.5 - 0.4 * sin(theta) * (1 - 0.3 * sin(theta))  # Negative sign here flips the egg",
        "+ ",
        "  polygon(x, y, col = \"yellow\", border = \"orange\")",
        "+ ",
        "  ",
        "+ ",
        "  dev.off()",
        "+ ",
        "  return(\"egg.png\")",
        "+ ",
        "}",
        "> ",
        "# Create the egg image",
        "> ",
        "egg_path <- create_egg()",
        "> ",
        "# Update your ggplot code",
        "> ",
        "ggplot(inflation_long, aes(x = Date, y = Egg_Inflation_Dif)) +",
        "+ ",
        "  geom_image(aes(image = egg_path), size = 0.02, na.rm = TRUE) +  # Reduced size from 0.05 to 0.02",
        "+ ",
        "  geom_smooth(method = \"lm\", se = FALSE, color = \"red\", na.rm = TRUE) +",
        "+ ",
        "  theme_minimal() +",
        "+ ",
        "  labs(title = \"Egg Inflation Difference Over Time\",",
        "+ ",
        "       x = \"Date\",",
        "+ ",
        "       y = \"Egg Inflation Difference\") +",
        "+ ",
        "  theme(plot.title = element_text(hjust = 0.5)) +",
        "+ ",
        "  scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\") +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "\u001B[38;5;254m`geom_smooth()` using formula = 'y ~ x'\u001B[39m\n",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(ggimage)",
        "> ",
        "# Path to your SVG file",
        "> ",
        "egg_path <- \"Assets/egg_solid_yellow.svg\"",
        "> ",
        "# Update your ggplot code",
        "> ",
        "ggplot(inflation_long, aes(x = Date, y = Egg_Inflation_Dif)) +",
        "+ ",
        "  geom_image(aes(image = egg_path), size = 0.03, asp = 1, na.rm = TRUE) +",
        "+ ",
        "  geom_smooth(method = \"lm\", se = FALSE, color = \"red\", na.rm = TRUE) +",
        "+ ",
        "  theme_minimal() +",
        "+ ",
        "  labs(title = \"Egg Inflation Difference Over Time\",",
        "+ ",
        "       x = \"Date\",",
        "+ ",
        "       y = \"Egg Inflation Difference\") +",
        "+ ",
        "  theme(plot.title = element_text(hjust = 0.5)) +",
        "+ ",
        "  scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\") +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "\u001B[38;5;254m`geom_smooth()` using formula = 'y ~ x'\u001B[39m\n",
        "> ",
        "# Update your ggplot code",
        "> ",
        "ggplot(inflation_long, aes(x = Date, y = Egg_Inflation_Dif)) +",
        "+ ",
        "  geom_image(aes(image = egg_path), size = 0.01, asp = 1, na.rm = TRUE) +",
        "+ ",
        "  geom_smooth(method = \"lm\", se = FALSE, color = \"red\", na.rm = TRUE) +",
        "+ ",
        "  theme_minimal() +",
        "+ ",
        "  labs(title = \"Egg Inflation Difference Over Time\",",
        "+ ",
        "       x = \"Date\",",
        "+ ",
        "       y = \"Egg Inflation Difference\") +",
        "+ ",
        "  theme(plot.title = element_text(hjust = 0.5)) +",
        "+ ",
        "  scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\") +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "\u001B[38;5;254m`geom_smooth()` using formula = 'y ~ x'\u001B[39m\n",
        "> ",
        "# Update your ggplot code",
        "> ",
        "ggplot(inflation_long, aes(x = Date, y = Egg_Inflation_Dif)) +",
        "+ ",
        "  geom_image(aes(image = egg_path), size = 0.01, asp = 1, na.rm = TRUE) +",
        "+ ",
        "  geom_smooth(method = \"lm\", se = FALSE, color = \"red\", na.rm = TRUE) +",
        "+ ",
        "  labs(title = \"Egg Inflation Difference Over Time\",",
        "+ ",
        "       x = \"Date\",",
        "+ ",
        "       y = \"Egg Inflation Difference\") +",
        "+ ",
        "  theme(plot.title = element_text(hjust = 0.5)) +",
        "+ ",
        "  scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\") +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "\u001B[38;5;254m`geom_smooth()` using formula = 'y ~ x'\u001B[39m\n",
        "> ",
        "# Update your ggplot code",
        "> ",
        "egg_scatterplot <- ggplot(inflation_long, aes(x = Date, y = Egg_Inflation_Dif)) +",
        "+ ",
        "  geom_image(aes(image = egg_path), size = 0.01, asp = 1, na.rm = TRUE) +",
        "+ ",
        "  geom_smooth(method = \"lm\", se = FALSE, color = \"black\", na.rm = TRUE) +",
        "+ ",
        "  labs(title = \"Egg Inflation Difference Over Time\",",
        "+ ",
        "       x = \"Date\",",
        "+ ",
        "       y = \"Egg Inflation Difference\") +",
        "+ ",
        "  theme(plot.title = element_text(hjust = 0.5)) +",
        "+ ",
        "  scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\") +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "> ",
        "ggsave(\"scatterplot_egg_inflation.png\", plot = egg_scatterplot, width = 12, height = 8, dpi = 300)",
        "\u001B[38;5;254m`geom_smooth()` using formula = 'y ~ x'\u001B[39m\n",
        "> ",
        "# Update your ggplot code",
        "> ",
        "egg_scatterplot <- ggplot(inflation_long, aes(x = Date, y = Egg_Inflation_Dif)) +",
        "+ ",
        "  geom_image(aes(image = egg_path), size = 0.01, dpi = 300, asp = 1, na.rm = TRUE) +",
        "+ ",
        "  geom_smooth(method = \"lm\", se = FALSE, color = \"black\", na.rm = TRUE) +",
        "+ ",
        "  labs(title = \"Egg Inflation Difference Over Time\",",
        "+ ",
        "       x = \"Date\",",
        "+ ",
        "       y = \"Egg Inflation Difference\") +",
        "+ ",
        "  theme(plot.title = element_text(hjust = 0.5)) +",
        "+ ",
        "  scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\") +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "Warning message:\nIn geom_image(aes(image = egg_path), size = 0.01, dpi = 300, asp = 1,  :\n  \u001B[38;5;254mIgnoring unknown parameters: `dpi`\u001B[39m\n",
        "> ",
        "# Update your ggplot code",
        "> ",
        "egg_scatterplot <- ggplot(inflation_long, aes(x = Date, y = Egg_Inflation_Dif)) +",
        "+ ",
        "  geom_image(aes(image = egg_path), size = 0.01, dpi = 300, na.rm = TRUE) +",
        "+ ",
        "  geom_smooth(method = \"lm\", se = FALSE, color = \"black\", na.rm = TRUE) +",
        "+ ",
        "  labs(title = \"Egg Inflation Difference Over Time\",",
        "+ ",
        "       x = \"Date\",",
        "+ ",
        "       y = \"Egg Inflation Difference\") +",
        "+ ",
        "  theme(plot.title = element_text(hjust = 0.5)) +",
        "+ ",
        "  scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\") +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45, hjust = 1))",
        "Warning message:\nIn geom_image(aes(image = egg_path), size = 0.01, dpi = 300, na.rm = TRUE) :\n  \u001B[38;5;254mIgnoring unknown parameters: `dpi`\u001B[39m\n",
        "> ",
        "ggplot(inflation_long, aes(x = Date, y = Overall_Inflation)) +",
        "+ ",
        "  geom_point() +  # Add points",
        "+ ",
        "  geom_smooth(method = \"lm\", se = FALSE, color = \"red\") +  # Add linear regression line",
        "+ ",
        "  theme_minimal()",
        "\u001B[38;5;254m`geom_smooth()` using formula = 'y ~ x'\u001B[39m\n",
        "Warning messages:\n1: \u001B[38;5;254mRemoved 6 rows containing non-finite values (`stat_smooth()`).\u001B[39m \n2: \u001B[38;5;254mRemoved 6 rows containing missing values (`geom_point()`).\u001B[39m \n",
        "> ",
        "adf.test(overall_inflation_ts)",
        "Error in adf.test(overall_inflation_ts) : \n  could not find function \"adf.test\"\n",
        "> ",
        "library(tseries)",
        "Registered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n\n    ‘tseries’ version: 0.10-54\n\n    ‘tseries’ is a package for time series analysis and computational finance.\n\n    See ‘library(help=\"tseries\")’ for details.\n\n",
        "\nRestarting R session...\n\n"
    ]
}