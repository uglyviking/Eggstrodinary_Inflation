downloadButton("download_plot", "Download Plot")
),
mainPanel(
plotlyOutput("inflation_plot", height = "600px"),  # Increased height
h4("Summary Statistics"),
verbatimTextOutput("summary"),
h4("Data Table"),
DTOutput("data_table")
)
)
)
server <- function(input, output) {
filtered_data <- reactive({
inflation_long %>%
filter(Date >= input$date_range[1] & Date <= input$date_range[2])
})
output$inflation_plot <- renderPlotly({
p <- ggplot(filtered_data(), aes(x = Date))
if(input$show_overall) {
p <- p + geom_line(aes(y = Overall_Inflation, color = "Overall Inflation"))
}
if(input$show_egg) {
p <- p + geom_line(aes(y = Egg_Inflation_Dif, color = "Egg Inflation Difference"))
}
p <- p + theme_minimal() +
labs(title = "Comparison of Overall Inflation and Egg Inflation Difference",
y = "Percentage Change",
color = "Measure") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Convert to plotly and add tooltips
ggplotly(p, tooltip = c("x", "y", "color")) %>%
layout(hoverlabel = list(bgcolor = "white"),
legend = list(orientation = "h", y = -0.2))  # Move legend below plot
})
output$summary <- renderPrint({
summary(filtered_data()[c("Overall_Inflation", "Egg_Inflation_Dif")])
})
output$data_table <- renderDT({
datatable(filtered_data())
})
output$download_plot <- downloadHandler(
filename = function() { paste("inflation_plot", Sys.Date(), ".png", sep="") },
content = function(file) {
p <- ggplot(filtered_data(), aes(x = Date))
if(input$show_overall) {
p <- p + geom_line(aes(y = Overall_Inflation, color = "Overall Inflation"))
}
if(input$show_egg) {
p <- p + geom_line(aes(y = Egg_Inflation_Dif, color = "Egg Inflation Difference"))
}
p <- p + theme_minimal() +
labs(title = "Comparison of Overall Inflation and Egg Inflation Difference",
y = "Percentage Change",
color = "Measure") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave(file, plot = p, device = "png", width = 12, height = 8, dpi = 300)
}
)
}
shinyApp(ui = ui, server = server)
inflation_data <- read.csv("City_Inflation_Differences.csv")
# Determine the most recent year and filter for the last 14 years
max_year <- max(inflation_data$Year)
inflation_data_filtered <- inflation_data |>
filter(Year > (max_year - 30))
# Reshape the filtered data
inflation_long <- inflation_data_filtered |>
pivot_longer(
cols = c(ends_with("Percentage_Change"), ends_with("Egg_Inflation_Dif")),
names_to = c("Month", ".value"),
names_pattern = "(.+)_(Percentage_Change|Egg_Inflation_Dif)"
) |>
rename(
Overall_Inflation = Percentage_Change,
Egg_Inflation_Dif = Egg_Inflation_Dif
) |>
mutate(
Month = match(Month, month.abb),
Date = ymd(paste(Year, Month, "01"))
) |>
arrange(Date)
# Create separate time series for overall inflation and egg inflation difference
overall_inflation_ts <- ts(inflation_long$Overall_Inflation,
start = c(min(inflation_long$Year), 1),
end = c(max(inflation_long$Year), 12),
frequency = 12)
egg_inflation_diff_ts <- ts(inflation_long$Egg_Inflation_Dif,
start = c(min(inflation_long$Year), 1),
end = c(max(inflation_long$Year), 12),
frequency = 12)
# Plot both time series using ggplot2
time_series_plot <- ggplot(inflation_long, aes(x = Date)) +
geom_line(aes(y = Overall_Inflation, color = "Overall Inflation")) +
geom_line(aes(y = Egg_Inflation_Dif, color = "Egg Inflation Difference")) +
labs(title = "Comparison of Overall Inflation and Egg Inflation Difference (Last 14 Years)",
y = "Percentage Change",
color = "Measure") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("inflation_comparison_hires.png", plot = time_series_plot, width = 12, height = 8, dpi = 300)
time_series_plot_interactive <- ggplotly(time_series_plot)
# Save as an HTML file
htmlwidgets::saveWidget(time_series_plot_interactive, "inflation_comparison_interactive.html")
library(shiny)
library(ggplot2)
library(dplyr)
library(lubridate)
library(plotly)
library(DT)
Library(shiny)
library(shiny)
library(ggplot2)
library(dplyr)
library(lubridate)
library(plotly)
library(DT)
library(shiny)
library(tidyr)
ui <- fluidPage(
titlePanel("Inflation Comparison"),
sidebarLayout(
sidebarPanel(
dateRangeInput("date_range", "Select Date Range:",
start = min(inflation_long$Date),
end = max(inflation_long$Date),
min = min(inflation_long$Date),
max = max(inflation_long$Date)),
checkboxInput("show_overall", "Show Overall Inflation", value = TRUE),
checkboxInput("show_egg", "Show Egg Inflation Difference", value = TRUE),
downloadButton("download_plot", "Download Plot")
),
mainPanel(
plotlyOutput("inflation_plot", height = "600px"),  # Increased height
h4("Summary Statistics"),
verbatimTextOutput("summary"),
h4("Data Table"),
DTOutput("data_table")
)
)
)
server <- function(input, output) {
filtered_data <- reactive({
inflation_long %>%
filter(Date >= input$date_range[1] & Date <= input$date_range[2])
})
output$inflation_plot <- renderPlotly({
p <- ggplot(filtered_data(), aes(x = Date))
if(input$show_overall) {
p <- p + geom_line(aes(y = Overall_Inflation, color = "Overall Inflation"))
}
if(input$show_egg) {
p <- p + geom_line(aes(y = Egg_Inflation_Dif, color = "Egg Inflation Difference"))
}
p <- p + theme_minimal() +
labs(title = "Comparison of Overall Inflation and Egg Inflation Difference",
y = "Percentage Change",
color = "Measure") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Convert to plotly and add tooltips
ggplotly(p, tooltip = c("x", "y", "color")) %>%
layout(hoverlabel = list(bgcolor = "white"),
legend = list(orientation = "h", y = -0.2))  # Move legend below plot
})
output$summary <- renderPrint({
summary(filtered_data()[c("Overall_Inflation", "Egg_Inflation_Dif")])
})
output$data_table <- renderDT({
datatable(filtered_data())
})
output$download_plot <- downloadHandler(
filename = function() { paste("inflation_plot", Sys.Date(), ".png", sep="") },
content = function(file) {
p <- ggplot(filtered_data(), aes(x = Date))
if(input$show_overall) {
p <- p + geom_line(aes(y = Overall_Inflation, color = "Overall Inflation"))
}
if(input$show_egg) {
p <- p + geom_line(aes(y = Egg_Inflation_Dif, color = "Egg Inflation Difference"))
}
p <- p + theme_minimal() +
labs(title = "Comparison of Overall Inflation and Egg Inflation Difference",
y = "Percentage Change",
color = "Measure") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave(file, plot = p, device = "png", width = 12, height = 8, dpi = 300)
}
)
}
shinyApp(ui = ui, server = server)
find_rtools()
shapiro.test(inflation_long$Overall_Inflation)
View(inflation_long)
View(inflation_long)
# Your existing code with modifications
library(tidyr)
library(dplyr)
library(lubridate)
library(ggplot2)
library(plotly)
#import data
inflation_data <- read.csv("City_Inflation_Differences.csv")
#import data
inflation_data <- read.csv("Data/City_Inflation_Differences.csv")
View(inflation_data)
View(inflation_data)
# Determine the most recent year and filter if necessary
max_year <- max(inflation_data$Year)
inflation_data_filtered <- inflation_data |>
filter(Year > (max_year - 14))
# Reshape the filtered data
inflation_long <- inflation_data_filtered |>
pivot_longer(
cols = c(ends_with("Percentage_Change"), ends_with("Egg_Inflation_Dif")),
names_to = c("Month", ".value"),
names_pattern = "(.+)_(Percentage_Change|Egg_Inflation_Dif)"
) |>
rename(
Overall_Inflation = Percentage_Change,
Egg_Inflation_Dif = Egg_Inflation_Dif
) |>
mutate(
Month = match(Month, month.abb),
Date = ymd(paste(Year, Month, "01"))
) |>
arrange(Date)
View(inflation_long)
View(inflation_long)
#import data
inflation_data <- read.csv("Data/City_Inflation_Differences.csv")
# Determine the most recent year and filter if necessary
max_year <- max(inflation_data$Year)
inflation_data_filtered <- inflation_data |>
filter(Year > (max_year - 14))
# Reshape the filtered data
inflation_long <- inflation_data_filtered |>
pivot_longer(
cols = c(ends_with("Percentage_Change"), ends_with("Egg_Inflation_Dif")),
names_to = c("Month", ".value"),
names_pattern = "(.+)_(Percentage_Change|Egg_Inflation_Dif)"
) |>
rename(
Overall_Inflation = Percentage_Change,
Egg_Inflation_Dif = Egg_Inflation_Dif
) |>
mutate(
Month = match(Month, month.abb),
Date = ymd(paste(Year, Month, "01"))
) |>
arrange(Date)
# Create separate time series for overall inflation and egg inflation difference
overall_inflation_ts <- ts(inflation_long$Overall_Inflation,
start = c(min(inflation_long$Year), 1),
end = c(max(inflation_long$Year), 12),
frequency = 12)
egg_inflation_diff_ts <- ts(inflation_long$Egg_Inflation_Dif,
start = c(min(inflation_long$Year), 1),
end = c(max(inflation_long$Year), 12),
frequency = 12)
# Plot both time series using ggplot2
time_series_plot <- ggplot(inflation_long, aes(x = Date)) +
geom_line(aes(y = Overall_Inflation, color = "Overall Inflation")) +
geom_line(aes(y = Egg_Inflation_Dif, color = "Egg Inflation Difference")) +
labs(title = "Comparison of Overall Inflation and Egg Inflation Difference (Last 14 Years)",
y = "Percentage Change",
color = "Measure") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(inflation_long)
View(inflation_long)
shapiro.test(inflation_long$egg_inflation_diff_ts)
shapiro.test(inflation_long$Egg_Inflation_Dif)
cor.test(egg_inflation_diff_ts, overall_inflation_ts, method = "spearman")
inflation_data <- read.csv("Data/City_Inflation_Differences.csv")
View(inflation_data)
View(inflation_data)
# Your existing code with modifications
library(tidyr)
library(dplyr)
library(lubridate)
library(ggplot2)
library(plotly)
#import data
inflation_data <- read.csv("Data/City_Inflation_Differences.csv")
# Determine the most recent year and filter if necessary
max_year <- max(inflation_data$Year)
inflation_data_filtered <- inflation_data |>
filter(Year > (max_year - 25))
# Reshape the filtered data
inflation_long <- inflation_data_filtered |>
pivot_longer(
cols = c(ends_with("Percentage_Change"), ends_with("Egg_Inflation_Dif")),
names_to = c("Month", ".value"),
names_pattern = "(.+)_(Percentage_Change|Egg_Inflation_Dif)"
) |>
rename(
Overall_Inflation = Percentage_Change,
Egg_Inflation_Dif = Egg_Inflation_Dif
) |>
mutate(
Month = match(Month, month.abb),
Date = ymd(paste(Year, Month, "01"))
) |>
arrange(Date)
# Create separate time series for overall inflation and egg inflation difference
overall_inflation_ts <- ts(inflation_long$Overall_Inflation,
start = c(min(inflation_long$Year), 1),
end = c(max(inflation_long$Year), 12),
frequency = 12)
egg_inflation_diff_ts <- ts(inflation_long$Egg_Inflation_Dif,
start = c(min(inflation_long$Year), 1),
end = c(max(inflation_long$Year), 12),
frequency = 12)
# Plot both time series using ggplot2
time_series_plot <- ggplot(inflation_long, aes(x = Date)) +
geom_line(aes(y = Overall_Inflation, color = "Overall Inflation")) +
geom_line(aes(y = Egg_Inflation_Dif, color = "Egg Inflation Difference")) +
labs(title = "Comparison of Overall Inflation and Egg Inflation Difference (Last 14 Years)",
y = "Percentage Change",
color = "Measure") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
time_series_plot
ggplot(inflation_long, aes(x = Date, y = Overall_Inflation)) +
geom_point() +  # Add points
geom_smooth(method = "lm", se = FALSE, color = "red") +  # Add linear regression line
theme_minimal()
ggplot(inflation_long, aes(x = Date, y = Egg_Inflation_Dif)) +
geom_point() +  # Add points
geom_smooth(method = "lm", se = FALSE, color = "red") +  # Add linear regression line
theme_minimal()
# Install and load required packages if not already done
if (!requireNamespace("ggimage", quietly = TRUE)) install.packages("ggimage")
if (!requireNamespace("fontawesome", quietly = TRUE)) install.packages("fontawesome")
library(ggplot2)
library(ggimage)
library(fontawesome)
# Get the egg icon as an image file
egg_icon <- fontawesome::fa_png("egg")
install.packages("rsvg")
library(rsvg)
library(ggplot2)
library(ggimage)
library(fontawesome)
# Get the egg icon as an image file
egg_icon <- fontawesome::fa_png("egg")
# Update your ggplot code
ggplot(inflation_long, aes(x = Date, y = Egg_Inflation_Dif)) +
geom_image(aes(image = egg_icon), size = 0.05) +  # Use geom_image instead of geom_point
geom_smooth(method = "lm", se = FALSE, color = "red") +  # Add linear regression line
theme_minimal() +
labs(title = "Egg Inflation Difference Over Time",
x = "Date",
y = "Egg Inflation Difference") +
theme(plot.title = element_text(hjust = 0.5))  # C
# Update your ggplot code
ggplot(inflation_long, aes(x = Date, y = Egg_Inflation_Dif)) +
geom_image(aes(image = egg_icon), size = 0.05) +  # Use geom_image instead of geom_point
geom_smooth(method = "lm", se = FALSE, color = "red") +  # Add linear regression line
theme_minimal() +
labs(title = "Egg Inflation Difference Over Time",
x = "Date",
y = "Egg Inflation Difference") +
theme(plot.title = element_text(hjust = 0.5))  # C
library(fontawesome)
# Get the egg icon as an image file
egg_icon <- fontawesome::fa_png("egg")
# Update your ggplot code
ggplot(inflation_long, aes(x = Date, y = Egg_Inflation_Dif)) +
geom_image(aes(image = egg_icon), size = 0.05, na.rm = TRUE) +  # Use geom_image instead of geom_point
geom_smooth(method = "lm", se = FALSE, color = "red", na.rm = TRUE) +  # Add linear regression line
theme_minimal() +
labs(title = "Egg Inflation Difference Over Time",
x = "Date",
y = "Egg Inflation Difference") +
theme(plot.title = element_text(hjust = 0.5)) +  # Center the title
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +  # Improve x-axis labels
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
library(ggimage)
# Create a custom egg shape
create_egg <- function() {
png("egg.png", width = 100, height = 100, bg = "transparent")
par(mar = c(0,0,0,0))
plot.new()
plot.window(xlim = c(0, 1), ylim = c(0, 1), asp = 1)
# Draw egg shape
theta <- seq(0, 2*pi, length.out = 100)
x <- 0.5 + 0.3 * cos(theta)
y <- 0.5 + 0.4 * sin(theta) * (1 - 0.3 * sin(theta))
polygon(x, y, col = "yellow", border = "orange")
dev.off()
return("egg.png")
}
# Create the egg image
egg_path <- create_egg()
# Update your ggplot code
ggplot(inflation_long, aes(x = Date, y = Egg_Inflation_Dif)) +
geom_image(aes(image = egg_path), size = 0.05, na.rm = TRUE) +
geom_smooth(method = "lm", se = FALSE, color = "red", na.rm = TRUE) +
theme_minimal() +
labs(title = "Egg Inflation Difference Over Time",
x = "Date",
y = "Egg Inflation Difference") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
library(ggimage)
# Create a custom egg shape
create_egg <- function() {
png("egg.png", width = 100, height = 100, bg = "transparent")
par(mar = c(0,0,0,0))
plot.new()
plot.window(xlim = c(0, 1), ylim = c(0, 1), asp = 1)
# Draw egg shape (flipped)
theta <- seq(0, 2*pi, length.out = 100)
x <- 0.5 + 0.3 * cos(theta)
y <- 0.5 - 0.4 * sin(theta) * (1 - 0.3 * sin(theta))  # Negative sign here flips the egg
polygon(x, y, col = "yellow", border = "orange")
dev.off()
return("egg.png")
}
# Create the egg image
egg_path <- create_egg()
# Update your ggplot code
ggplot(inflation_long, aes(x = Date, y = Egg_Inflation_Dif)) +
geom_image(aes(image = egg_path), size = 0.02, na.rm = TRUE) +  # Reduced size from 0.05 to 0.02
geom_smooth(method = "lm", se = FALSE, color = "red", na.rm = TRUE) +
theme_minimal() +
labs(title = "Egg Inflation Difference Over Time",
x = "Date",
y = "Egg Inflation Difference") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
library(ggimage)
# Path to your SVG file
egg_path <- "Assets/egg_solid_yellow.svg"
# Update your ggplot code
ggplot(inflation_long, aes(x = Date, y = Egg_Inflation_Dif)) +
geom_image(aes(image = egg_path), size = 0.03, asp = 1, na.rm = TRUE) +
geom_smooth(method = "lm", se = FALSE, color = "red", na.rm = TRUE) +
theme_minimal() +
labs(title = "Egg Inflation Difference Over Time",
x = "Date",
y = "Egg Inflation Difference") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Update your ggplot code
ggplot(inflation_long, aes(x = Date, y = Egg_Inflation_Dif)) +
geom_image(aes(image = egg_path), size = 0.01, asp = 1, na.rm = TRUE) +
geom_smooth(method = "lm", se = FALSE, color = "red", na.rm = TRUE) +
theme_minimal() +
labs(title = "Egg Inflation Difference Over Time",
x = "Date",
y = "Egg Inflation Difference") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Update your ggplot code
ggplot(inflation_long, aes(x = Date, y = Egg_Inflation_Dif)) +
geom_image(aes(image = egg_path), size = 0.01, asp = 1, na.rm = TRUE) +
geom_smooth(method = "lm", se = FALSE, color = "red", na.rm = TRUE) +
labs(title = "Egg Inflation Difference Over Time",
x = "Date",
y = "Egg Inflation Difference") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Update your ggplot code
egg_scatterplot <- ggplot(inflation_long, aes(x = Date, y = Egg_Inflation_Dif)) +
geom_image(aes(image = egg_path), size = 0.01, asp = 1, na.rm = TRUE) +
geom_smooth(method = "lm", se = FALSE, color = "black", na.rm = TRUE) +
labs(title = "Egg Inflation Difference Over Time",
x = "Date",
y = "Egg Inflation Difference") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("scatterplot_egg_inflation.png", plot = egg_scatterplot, width = 12, height = 8, dpi = 300)
# Update your ggplot code
egg_scatterplot <- ggplot(inflation_long, aes(x = Date, y = Egg_Inflation_Dif)) +
geom_image(aes(image = egg_path), size = 0.01, dpi = 300, asp = 1, na.rm = TRUE) +
geom_smooth(method = "lm", se = FALSE, color = "black", na.rm = TRUE) +
labs(title = "Egg Inflation Difference Over Time",
x = "Date",
y = "Egg Inflation Difference") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Update your ggplot code
egg_scatterplot <- ggplot(inflation_long, aes(x = Date, y = Egg_Inflation_Dif)) +
geom_image(aes(image = egg_path), size = 0.01, dpi = 300, na.rm = TRUE) +
geom_smooth(method = "lm", se = FALSE, color = "black", na.rm = TRUE) +
labs(title = "Egg Inflation Difference Over Time",
x = "Date",
y = "Egg Inflation Difference") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(inflation_long, aes(x = Date, y = Overall_Inflation)) +
geom_point() +  # Add points
geom_smooth(method = "lm", se = FALSE, color = "red") +  # Add linear regression line
theme_minimal()
adf.test(overall_inflation_ts)
library(tseries)
